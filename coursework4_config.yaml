apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aki-detection-state
  namespace: europe
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aki-detection
  namespace: europe
spec:
  replicas: 1
  strategy:
      type: Recreate
  selector:
    matchLabels:
      app: aki-detection
  template:
    metadata:
      labels:
        app: aki-detection
    spec:
      containers:
      - name: aki-detection
        image: imperialswemlsspring2025.azurecr.io/coursework4-europe
        args:
        - "--history=/aki-system/data/history.csv"
        env:
        - name: MLLP_ADDRESS
          value: europe-simulator.coursework4:8440
        - name: PAGER_ADDRESS
          value: europe-simulator.coursework4:8440
        ports:
        - name: http
          containerPort: 8000
        - name: metrics
          containerPort: 8000  # Expose metrics for Prometheus
        volumeMounts:
          - mountPath: "/aki-system/data"
            name: hospital-history
            readOnly: true
          - mountPath: "/aki-system/state"
            name: aki-detection-state
        resources:
          requests:
            memory: 1G
            cpu: 1
      initContainers:
      - name: copy-hospital-history
        image: imperialswemlsspring2025.azurecr.io/coursework4-history
        volumeMounts:
          - mountPath: "/data"
            name: hospital-history
        resources:
          requests:
            memory: 1G
            cpu: 1
      volumes:
      - name: hospital-history
        emptyDir:
          sizeLimit: 50Mi
      - name: aki-detection-state
        persistentVolumeClaim:
          claimName: aki-detection-state
---
# Prometheus ConfigMap (Contains prometheus.yml)
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: europe
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
      evaluation_interval: 5s

    scrape_configs:
      - job_name: 'aki-detection'
        static_configs:
          - targets: ['aki-detection:8000']

      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: europe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: europe
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090

