version: '3.8'

services:
  db:
    container_name: db
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'hospital_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    command: --local-infile=1
    volumes:
      - my-db:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my_network  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  message-simulator:
    build:
      context: ./simulation
      dockerfile: Dockerfile.simulation
    container_name: message_sim
    networks:
      - my_network
    depends_on:
      aki-system:
        condition: service_started
    ports:
      - "8440:8440"
      - "8441:8441"
    logging:
      driver: "local"
    volumes:
      - ./logs:/var/log

  aki-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aki-system
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy  # Ensure db is ready before aki-system starts
    logging:
      driver: "local"
    volumes:
      - ./logs:/var/log
    ports:
      - "8000:8000"  # Expose metrics for Prometheus

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"  # Exposes Prometheus UI
    depends_on:
      - aki-system
    networks:
      - my_network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml  # Mount inside container

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"  # Expose Grafana UI
    volumes:
      - grafana-storage:/var/lib/grafana  # Persist dashboards & settings
    networks:
      - my_network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Default password (change it)
      - GF_USERS_ALLOW_SIGN_UP=false  # Disable new users
      - GF_SERVER_DOMAIN=localhost

configs:
  prometheus-config:
    content: |
      global:
        scrape_interval: 5s
        evaluation_interval: 5s

      scrape_configs:
        - job_name: 'aki-detection'
          static_configs:
            - targets: ['aki-system:8000']

        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

volumes:
  my-db:
  grafana-storage:

networks:
  my_network:
    driver: bridge
